apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-redis
spec:
  serviceName: "redis"
  selector:
    matchLabels:
      app: {{ .Release.Name }}-redis
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-redis
        app.kubernetes.io/arch: {{ default "amd64" .Values.arch }}
    spec:
      containers:
        - name: redis
          image: {{ .Values.redis.image }}
          ports:
            - name: redis
              containerPort: 6379
          {{- if .Values.redis.persistence.enabled }}
          volumeMounts:
            - name: data
              mountPath: /data
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
      {{- if .Values.redis.persistence.enabled }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.redis.persistence.persistentVolumeClaimName }}
      {{- end }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      {{- if eq "arm64" .Values.arch }}
      tolerations:
        - key: arch
          operator: Equal
          value: {{ .Values.arch }}
          effect: NoSchedule
      nodeSelector:
        kubernetes.io/arch: {{ .Values.arch }}
      {{- end }}
