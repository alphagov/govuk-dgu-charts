apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-ckan
spec:
  replicas: {{ .Values.ckan.count }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-ckan
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-ckan
    spec:
      securityContext:
        runAsUser: 900
        runAsGroup: 900
        fsGroup: 900
      {{ if .Values.ckan.serviceAccount.enabled }}serviceAccountName: {{ .Values.ckan.serviceAccount.name | default (print "ckan-" .Release.Name) }}{{- end }}
      initContainers:
        - name: config-set
          image: '{{ include "docker-uri" (dict "environment" .Values.environment "app" "ckan" "files" $.Files) }}'
          command: [ "/bin/sh", "-c", '. /init/init.sh']
          imagePullPolicy: Always
          env:
            {{ include "ckan.environment-variables" . | nindent 12 }}
            - name: CKAN_BEAKER_SESSION_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.ckan.config.beakerSessionSecretKeyRef.name }}
                  key: {{ .Values.ckan.config.beakerSessionSecretKeyRef.key }}
            {{- if .Values.dev.enabled }}
            - name: CKAN_AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.ckan.config.s3.credentials.awsAccessKeyIdSecretKeyRef.name }}
                  key: {{ .Values.ckan.config.s3.credentials.awsAccessKeyIdSecretKeyRef.key }}
            - name: CKAN_AWS_ACCESS_KEY_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.ckan.config.s3.credentials.awsSecretAccessKeySecretKeyRef.name }}
                  key: {{ .Values.ckan.config.s3.credentials.awsSecretAccessKeySecretKeyRef.key }}
            {{- end }}
          volumeMounts:
            - name: production-ini
              mountPath: /map
              readOnly: true
            - name: config
              mountPath: /config
            - name: ckan-init
              mountPath: /init
      containers:
        - name: ckan
          image: '{{ include "docker-uri" (dict "environment" .Values.environment "app" "ckan" "files" $.Files) }}'
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 5000
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: true
          command: ["/bin/sh", "-c"]
          args: {{ .Values.ckan.args }}
          env:
            {{ include "ckan.environment-variables" . | nindent 12 }}
          {{- if .Values.ckan.probes.enabled }}
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: http
            periodSeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: http
            periodSeconds: 5
            successThreshold: 3
            timeoutSeconds: 10
          startupProbe:
            httpGet:
              path: /healthcheck
              port: http
            initialDelaySeconds: 60
            failureThreshold: 60
            periodSeconds: 10
            timeoutSeconds: 60
          {{- end }}
      volumes:
        - name: ckan-init
          configMap:
            name: {{ .Release.Name }}-ckan-init
        - name: production-ini
          configMap:
            name: {{ .Release.Name }}-ckan-production-ini
        - name: config
          emptyDir: {}
