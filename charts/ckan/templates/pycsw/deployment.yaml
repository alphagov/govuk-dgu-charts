apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-pycsw
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: {{ .Values.pycsw.replicaCount }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: {{ .Release.Name }}-pycsw
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-pycsw
        app.kubernetes.io/arch: {{ .Values.pycsw.arch }}
    spec:
      securityContext:
        runAsUser: 900
        runAsGroup: 900
        fsGroup: 900
      {{- include "ckan.pycsw-init" . | nindent 6 }}
      containers:
        - name: pycsw
          image: '{{ include "docker-uri" (dict "environment" .Values.environment "app" "pycsw" "files" $.Files) }}'
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8000
          volumeMounts:
            - name: config
              mountPath: /config
          command: ["/bin/sh", "-c"]
          args: {{ .Values.pycsw.args }}
          env:
            - name: PYCSW_CONFIG
              value: /config/pycsw.cfg
            {{ include "ckan.environment-variables" . | nindent 12 }}
          {{- if .Values.pycsw.probes.enabled }}
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 3
          {{- end }}
      {{ include "ckan.pycsw-volumes" . | nindent 6 }}
      {{- if eq "arm64" .Values.pycsw.arch }}
      tolerations:
        - key: arch
          operator: Equal
          value: {{ .Values.pycsw.arch }}
          effect: NoSchedule
      nodeSelector:
        kubernetes.io/arch: {{ .Values.pycsw.arch }}
      {{- end }}