{{- if .Values.postgres.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgres
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: {{ .Release.Name }}-postgres
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-postgres
        app.kubernetes.io/arch: {{ default "amd64" .Values.arch }}
    spec:
      containers:
        - name: postgres
          image: {{ .Values.postgres.image }}
          ports:
            - name: postgres
              containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: ckan
            - name: POSTGRES_PASSWORD
              value: ckan
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
          volumeMounts:
          {{- if .Values.postgres.persistence.enabled }}
            - name: data
              mountPath: /var/lib/postgresql/data
          {{- end }}
            - name: postgis-init
              mountPath: /docker-entrypoint-initdb.d
      volumes:
      {{- if .Values.postgres.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.postgres.persistence.persistentVolumeClaimName }}
      {{- end }}
        - name: postgis-init
          configMap:
            name: {{ .Release.Name }}-postgis-init
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
        seccompProfile:
          type: RuntimeDefault
      {{- if eq "arm64" .Values.arch }}
      tolerations:
        - key: arch
          operator: Equal
          value: {{ .Values.arch }}
          effect: NoSchedule
      nodeSelector:
        kubernetes.io/arch: {{ .Values.arch }}
      {{- end }}
{{- end }}
