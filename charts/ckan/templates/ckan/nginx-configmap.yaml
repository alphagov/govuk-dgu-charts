{{- if .Values.ckan.nginx.configMap.create }}
{{- $fullName := (print .Release.Name "-ckan") -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $fullName }}-nginx-conf
  labels:
    app: {{ $fullName }}
    app.kubernetes.io/name: {{ $fullName }}
    app.kubernetes.io/component: nginx
data:
  nginx.conf: |-

    error_log  /dev/stderr warn;
    pid        /tmp/nginx.pid;

    events {
      worker_connections  1024;
    }

    http {
      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;

      client_body_temp_path /tmp/client_temp;
      proxy_temp_path       /tmp/proxy_temp_path;
      fastcgi_temp_path     /tmp/fastcgi_temp;
      uwsgi_temp_path       /tmp/uwsgi_temp;
      scgi_temp_path        /tmp/scgi_temp;

      proxy_buffer_size 16k;  # Max total size of response headers.
      # n * m = max response size before spooling to disk. p95 response size should
      # fit comfortably within this in order to avoid performance issues.
      proxy_buffers 24 16k;

      server_tokens off;

      sendfile        on;
      keepalive_timeout  65;

      # Default values for response headers. These values are used when the
      # header is not already set on the incoming response.
      # https://serverfault.com/a/598106
      map $upstream_http_strict_transport_security $strict_transport_security {
        "" "max-age=31536000; preload";
      }
      map $upstream_http_permissions_policy $permissions_policy {
        "" "interest-cohort=()";
      }
      map $upstream_http_x_content_type_options $x_content_type_options {
        "" "nosniff";
      }

      log_format json_event escape=json '{'
        '"@timestamp":"$time_iso8601",'
        '"body_bytes_sent":$body_bytes_sent,'
        '"bytes_sent":$bytes_sent,'
        '"http_host":"$http_host",'
        '"http_referer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"http_x_forwarded_for":"$http_x_forwarded_for",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request_method":"$request_method",'
        '"request_time":$request_time,'
        '"request_uri":"$request_uri",'
        '"sent_http_content_type":"$sent_http_content_type",'
        '"sent_http_location":"$sent_http_location",'
        '"server_protocol":"$server_protocol",'
        '"status":$status,'
        '"upstream_addr":"$upstream_addr",'
        '"upstream_response_time":"$upstream_response_time"'
      '}';

      upstream {{ $fullName }} {
        server 127.0.0.1:{{ .Values.ckan.appPort }};
      }

      server {
        listen {{ .Values.ckan.nginx.port }};
        proxy_connect_timeout {{ .Values.ckan.nginx.proxyConnectTimeout }};
        proxy_read_timeout    {{ .Values.ckan.nginx.proxyReadTimeout }};

        access_log /dev/stdout json_event;
        error_log /dev/stderr;

        # Where the response header is already set on the incoming response,
        # these are no-ops. https://serverfault.com/a/598106
        add_header Strict-Transport-Security $strict_transport_security;
        add_header Permissions-Policy $permissions_policy;
        add_header X-Content-Type-Options $x_content_type_options always;

        {{- if ( or (ne .Values.environment "production") (eq .Values.ckan.nginx.denyCrawlers true ) ) }}
        add_header X-Robots-Tag "noindex";
        {{- end }}

        location / {
          proxy_set_header   Host $http_host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_pass         http://{{ $fullName }};
          proxy_redirect     off;
          client_max_body_size {{ .Values.ckan.nginx.clientMaxBodySize }};
        }

        # Endpoint for liveness and readiness checks of the nginx container.
        location = /readyz {
          return 200 'ok\n';
        }

        # allow access to safelist of endpoints
        {{- range $path := .Values.ckan.nginx.safelist }}
        location ~ ^/(api|api/3){{ $path }} {
          proxy_set_header   Host $http_host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_pass         http://{{ $fullName }}/$uri$is_args$args;
          proxy_redirect     off;
          client_max_body_size {{ $.Values.ckan.nginx.clientMaxBodySize }};
        }
        {{- end }}

        # deny access to other api endpoints
        location ~ ^/(api|api/3) {
          deny all;
          return 403;
        }
      }
    }
{{- end }}
