{{- $environment := hasPrefix "eph-" "{{ $.Values.environment }}" | ternary $.Values.environment "ephemeral" -}}
{{- $fullName := print .Release.Name "-ckan" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    app: {{ $fullName }}
    app.kubernetes.io/name: {{ $fullName }}
    app.kubernetes.io/component: app
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: {{ .Values.ckan.replicaCount }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: {{ $fullName }}
  template:
    metadata:
      labels:
        app: {{ $fullName }}
        app.kubernetes.io/name: {{ $fullName }}
        app.kubernetes.io/arch: {{ default "amd64" .Values.arch }}
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 900
        runAsGroup: 900
        fsGroup: 900
        seccompProfile:
          type: RuntimeDefault
      {{ if .Values.ckan.serviceAccount.enabled }}
      serviceAccountName: {{ .Values.ckan.serviceAccount.name | default (print "ckan-" .Release.Name) }}
      {{- end }}
      initContainers:
        - name: config-set
          image: '{{ include "docker-uri" (dict "environment" $environment "app" "ckan" "files" $.Files) }}'
          command: [ "/bin/sh", "-c", '. /init/init.sh']
          imagePullPolicy: Always
          env:
            {{ include "ckan.environment-variables" . | nindent 12 }}
            {{- if .Values.dev.enabled }}
            - name: CKAN_AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.ckan.config.s3.credentials.awsAccessKeyIdSecretKeyRef.name }}
                  key: {{ .Values.ckan.config.s3.credentials.awsAccessKeyIdSecretKeyRef.key }}
            - name: CKAN_AWS_ACCESS_KEY_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.ckan.config.s3.credentials.awsSecretAccessKeySecretKeyRef.name }}
                  key: {{ .Values.ckan.config.s3.credentials.awsSecretAccessKeySecretKeyRef.key }}
            {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
          volumeMounts:
            - name: production-ini
              mountPath: /map
              readOnly: true
            - name: config
              mountPath: /config
            - name: ckan-init
              mountPath: /init
      containers:
        - name: ckan
          image: '{{ include "docker-uri" (dict "environment" $environment "app" "ckan" "files" $.Files) }}'
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: {{ .Values.ckan.appPort }}
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: true
          command: ["/bin/sh", "-c"]
          args: {{ .Values.ckan.args }}
          env:
            {{ include "ckan.environment-variables" . | nindent 12 }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
          {{- if .Values.ckan.probes.enabled }}
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: http
            periodSeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: http
            periodSeconds: 5
            successThreshold: 3
            timeoutSeconds: 10
          startupProbe:
            httpGet:
              path: /healthcheck
              port: http
            initialDelaySeconds: 60
            failureThreshold: 60
            periodSeconds: 10
            timeoutSeconds: 60
          {{- end }}
        - name: nginx
          image: "{{ .Values.ckan.nginx.image.repository }}:{{ .Values.ckan.nginx.image.tag }}"
          imagePullPolicy: {{ .Values.ckan.nginx.image.pullPolicy | default "Always" }}
          ports:
            - name: http
              containerPort: {{ .Values.ckan.nginx.port }}
          livenessProbe: &nginx-probe
            httpGet:
              path: /readyz
              port: http
            initialDelaySeconds: 2
            failureThreshold: 3
            periodSeconds: 5
            timeoutSeconds: 20
          readinessProbe:
            <<: *nginx-probe  # Intentionally same path as liveness.
            failureThreshold: 2
            timeoutSeconds: 15
          {{- with .Values.ckan.nginx.resources }}
          resources:
            {{- . | toYaml | trim | nindent 12 }}
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: ["ALL"]
          volumeMounts:
            - name: {{ .Values.ckan.nginx.configMap.name | default (printf "%s-nginx-conf" $fullName) }}
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: nginx-tmp
              mountPath: /tmp
            {{- with .Values.ckan.nginx.extraVolumeMounts }}
              {{ . | toYaml | trim | nindent 12 }}
            {{- end }}
          lifecycle:
            preStop:
              exec:
                command: ["sleep", "15"] # To allow time for ALB to deregister pod before termination
      volumes:
        - name: ckan-init
          configMap:
            name: {{ .Release.Name }}-ckan-init
        - name: production-ini
          configMap:
            name: {{ .Release.Name }}-{{ .Values.ckan.ckanIniConfigMap }}
        - name: config
          emptyDir: {}
        - name: {{ .Values.ckan.nginx.configMap.name | default (printf "%s-nginx-conf" $fullName) }}
          configMap:
            name: {{ .Values.ckan.nginx.configMap.name | default (printf "%s-nginx-conf" $fullName) }}
        - name: nginx-tmp
          emptyDir: {}
      {{- if eq "arm64" .Values.arch }}
      tolerations:
        - key: arch
          operator: Equal
          value: {{ .Values.arch }}
          effect: NoSchedule
      nodeSelector:
        kubernetes.io/arch: {{ .Values.arch }}
      {{- end }}