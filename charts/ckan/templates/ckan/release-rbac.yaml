apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-clusterrole
rules:
- apiGroups: [""]
  resources: ["pods", "services"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets", "statefulsets"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-clusterrole-binding
  namespace: datagovuk
subjects:
- kind: ServiceAccount
  name: ckan
  namespace: datagovuk
roleRef:
  kind: ClusterRole
  name: release-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-clusterrole-binding
  namespace: cluster-services
subjects:
- kind: ServiceAccount
  name: ckan
  namespace: datagovuk
roleRef:
  kind: ClusterRole
  name: release-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   name: release-clusterrole-binding
#   namespace: default
# subjects:
# - kind: ServiceAccount
#   # name: default
#   name: release-sa
#   namespace: apps
# roleRef:
#   kind: ClusterRole
#   name: release-clusterrole
#   apiGroup: rbac.authorization.k8s.io
# ---
# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: release-sa
# {{- if .Values.ckan.serviceAccount.enabled }}
# {{- with .Values.ckan.serviceAccount }}
#   annotations:
#     eks.amazonaws.com/role-arn: {{ .iamRoleARN }}
# {{- end }}
# {{- end }}
